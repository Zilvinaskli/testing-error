/*! Rappid v3.0.1 - HTML5 Diagramming Framework

Copyright (c) 2015 client IO

 2019-08-10 


This Source Code Form is subject to the terms of the Rappid License
, v. 2.0. If a copy of the Rappid License was not distributed with this
file, You can obtain one at http://jointjs.com/license/rappid_v2.txt
 or from the Rappid archive as was distributed by client IO. See the LICENSE file.*/


// Paper 1.
// --------

var graph1 = new joint.dia.Graph;
var $paper1 = $('#paper1');
var paper1 = new joint.dia.Paper({
    el: $paper1,
    width: 2000,
    height: 2000,
    gridSize: 1,
    model: graph1
});
paper1.translate(20, 20);

var cells = [
    { type: 'link', source: { id: 'Dennis' }, target: { id: 'Michael' }},
    { type: 'link', source: { id: 'Michael' }, target: { id: 'Jessica' }},
    { type: 'link', source: { id: 'Jessica' }, target: { id: 'Barbara' }},
    { type: 'link', source: { id: 'Michael' }, target: { id: 'Timothy' }},
    { size: { width: 10, height: 10 }, id: 'Dennis', type: 'standard.Circle', attrs: { label: { text: 'Dennis' }}},
    { size: { width: 10, height: 10 }, id: 'Michael', type: 'standard.Circle', attrs: { label: { text: 'Michael' }}},
    { size: { width: 10, height: 10 }, id: 'Jessica', type: 'standard.Circle', attrs: { label: { text: 'Jessica' }}},
    { size: { width: 10, height: 10 }, id: 'Timothy', type: 'standard.Circle', attrs: { label: { text: 'Timothy' }}},
    { size: { width: 10, height: 10 }, id: 'Barbara', type: 'standard.Circle', attrs: { label: { text: 'Barbara' }}}
];
graph1.fromJSON({ cells: cells });

var graph1Layout = new joint.layout.ForceDirected({
    graph: graph1,
    width: 580, height: 380,
    gravityCenter: { x: 290, y: 190 },
    charge: 180,
    linkDistance: 30
});
graph1Layout.start();


// Paper 2.
// --------

var graph2 = new joint.dia.Graph;
var $paper2 = $('#paper2');
var paper2 = new joint.dia.Paper({
    el: $paper2,
    width: 2000,
    height: 2000,
    gridSize: 1,
    model: graph2,
});
paper2.translate(20, 20);

var cells2 = [
    { type: 'link', source: { id: 'A' }, target: { id: 'B' }},
    { type: 'link', source: { id: 'A' }, target: { id: 'C' }},
    { type: 'link', source: { id: 'A' }, target: { id: 'D' }},
    { type: 'link', source: { id: 'A' }, target: { id: 'E' }},
    { type: 'link', source: { id: 'A' }, target: { id: 'F' }},
    { type: 'link', source: { id: 'A' }, target: { id: 'G' }},
    { type: 'link', source: { id: 'B' }, target: { id: 'H' }},
    { type: 'link', source: { id: 'B' }, target: { id: 'I' }},
    { type: 'link', source: { id: 'B' }, target: { id: 'J' }},
    { size: { width: 10, height: 10 }, id: 'A', type: 'standard.Circle', attrs: { label: { text: 'A' }}},
    { size: { width: 10, height: 10 }, id: 'B', type: 'standard.Circle', attrs: { label: { text: 'B' }}},
    { size: { width: 10, height: 10 }, id: 'C', type: 'standard.Circle', attrs: { label: { text: 'C' }}},
    { size: { width: 10, height: 10 }, id: 'D', type: 'standard.Circle', attrs: { label: { text: 'D' }}},
    { size: { width: 10, height: 10 }, id: 'E', type: 'standard.Circle', attrs: { label: { text: 'E' }}},
    { size: { width: 10, height: 10 }, id: 'F', type: 'standard.Circle', attrs: { label: { text: 'F' }}},
    { size: { width: 10, height: 10 }, id: 'G', type: 'standard.Circle', attrs: { label: { text: 'G' }}},
    { size: { width: 10, height: 10 }, id: 'H', type: 'standard.Circle', attrs: { label: { text: 'H' }}},
    { size: { width: 10, height: 10 }, id: 'I', type: 'standard.Circle', attrs: { label: { text: 'I' }}},
    { size: { width: 10, height: 10 }, id: 'J', type: 'standard.Circle', attrs: { label: { text: 'J' }}}
];

graph2.fromJSON({ cells: cells2 });


var graph2Layout = new joint.layout.ForceDirected({
    graph: graph2,
    width: 580, height: 380,
    gravityCenter: { x: 290, y: 190 },
    charge: 180,
    linkDistance: 30
});
graph2Layout.start();


// Main.
// -----

window.requestAnimationFrame = window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || function( callback ) {
    window.setTimeout(callback, 1000 / 60);
};

function animate() {
    requestAnimationFrame(animate);
    graph1Layout.step();
    graph2Layout.step();
}

$('#animate').on('click', animate);

$('#step').on('click', function() {

    _.each(_.range(100), function() {
        graph1Layout.step();
        graph2Layout.step();
    });
});
