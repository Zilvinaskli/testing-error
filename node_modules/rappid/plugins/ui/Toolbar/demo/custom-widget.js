/*! Rappid v3.0.1 - HTML5 Diagramming Framework

Copyright (c) 2015 client IO

 2019-08-10 


This Source Code Form is subject to the terms of the Rappid License
, v. 2.0. If a copy of the Rappid License was not distributed with this
file, You can obtain one at http://jointjs.com/license/rappid_v2.txt
 or from the Rappid archive as was distributed by client IO. See the LICENSE file.*/


joint.ui.widgets.customButton = joint.ui.widgets.button.extend({

    references: ['customReference'],

    initialize: function() {

        var proxy = this.getReferences().customReference;

        this.listenTo(proxy, 'all', function() {
            console.log('--- customButton: EVENT FROM PROXY', arguments);
        });

        this.listenTo(proxy, 'custom-button-event:show', this.show.bind(this));
        this.listenTo(proxy, 'custom-button-event:hide', this.hide.bind(this));
        this.listenTo(proxy, 'custom-button-event:toggle', this.toggle.bind(this));

        joint.ui.widgets.button.prototype.initialize.apply(this, arguments);
    },

    show: function() {
        this.$el.show();
    },

    toggle: function() {
        if (this.$el.is(':visible')) {
            this.$el.hide();
        } else {
            this.$el.show();
        }
    },

    hide: function() {
        this.$el.hide();
    },
});

var proxy = _.extend({}, Backbone.Events);

var toolbarWithCustom = new joint.ui.Toolbar({

    references: {
        // could be object, function, class ...
        customReference: proxy
    },
    groups: {
        groups: {
            a: { index: 1 },
            b: { index: 2 },
        }
    },
    tools: [

        { type: 'customButton', name: 'cancel', text: 'test', group: 'b' },
        { type: 'separator', group: 'b' },
        { type: 'inputText', label: 'text', group: 'b' },
        { type: 'separator', group: 'b' },

        { type: 'label', text: 'select Font: ', group: 'a' },
        { type: 'toggle', name: 'toggleFont', group: 'a' },
        { type: 'separator', group: 'a' },
        {
            type: 'select-box', name: 'theme',
            group: 'a',
            width: 200,
            options: [
                { content: 'default' },
                { content: 'modern' },
                { content: 'dark' },
                { content: 'material' }
            ],
            value: 'modern'
        }
    ]
});

let $toolbars = $('#toolbars');

$toolbars.append($('<h3/>').text('Toolbar with custom widget and event proxy (see console for details)'));
$toolbars.append(toolbarWithCustom.render().el);

// helper for getting a group view
var getGroupView = function(name) {
    return toolbarWithCustom.groupViews.find(function(view) {
        return view.options.name === name;
    });
};

toolbarWithCustom.on('all', function() {
    console.log('*** TOOLBAR WITH CUSTOM WIDGET EVENT', arguments);
});

$toolbars.append($('<button/>', { text: 'toggle "test"' }).css('marginLeft', 20).on('click', function() {
    proxy.trigger('custom-button-event:toggle', {});
}));

$toolbars.append($('<button/>', { text: 'toggle group "a"' }).css('marginLeft', 20).on('click', function() {

    // get the group element
    var groupViewA = getGroupView('a');

    if (groupViewA.$el.is(':visible')) {
        groupViewA.$el.hide();
    } else {
        groupViewA.$el.show();
    }
}));

